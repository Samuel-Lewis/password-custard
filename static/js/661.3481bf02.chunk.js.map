{"version":3,"file":"static/js/661.3481bf02.chunk.js","mappings":"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","sources":["../node_modules/bignumber.js/bignumber.js","../node_modules/rword/src/lib/generate-indexes.ts","../node_modules/rword/src/lib/random.ts","../node_modules/rword/src/lib/shuffle-words.ts","../node_modules/rword/src/rword.ts","../node_modules/secure-rng/index.js","../node_modules/secure-rng/lib/errors/character-set-length-can-not-be-below-one-error.js","../node_modules/secure-rng/lib/errors/decimal-places-can-not-be-below-one-error.js","../node_modules/secure-rng/lib/errors/length-parameter-can-not-be-below-one-error.js","../node_modules/secure-rng/lib/secure-rng.js","../node_modules/ts-error/lib/cjs.js","../node_modules/ts-error/lib/helpers.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/tslib/tslib.es6.mjs"],"sourcesContent":[";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","import { Random } from './random';\n\n/**\n * Randomly generate numbers for indexes within the words array.\n * @param length - The length of the words array.\n * @param count - How many indexes to generate.\n */\nexport function generateIndexes(length: number, count: number): number[] {\n  const indexes = [];\n\n  while (true) {\n    const index = Random.range(0, length);\n\n    // Check if the index has been chosen before\n    if (indexes.indexOf(index) == -1) indexes.push(index);\n\n    // Stop looping if we've hit limit\n    if (indexes.length == count) break;\n    else if (length < count && indexes.length == length) break;\n  }\n\n  return indexes;\n}\n","import * as crypto from 'crypto';\n\nexport class Random {\n  /**\n   * Generate a random number between `0` (inclusive) and `1` (exclusive). A\n   *  drop in replacement for `Math.random()`\n   */\n  static value(): number {\n    return this.intToFloat(parseInt(crypto.randomBytes(8).toString('hex'), 16));\n  }\n\n  /**\n   * Generate a random number between `min` (inclusive) and `max` (exclusive).\n   */\n  static range(min: number, max: number): number {\n    return Math.floor(this.value() * (max - min) + min);\n  }\n\n  /** Transform an integer to a floating point number. */\n  private static intToFloat(integer: number): number {\n    return integer / Math.pow(2, 64);\n  }\n}\n","import { Random } from './random';\n\n/**\n * Shuffle the words array in place.\n * @param words - The words array to shuffle.\n */\nexport function shuffleWords(words: string[]) {\n  let i = 0;\n  let j = 0;\n  let temp = '';\n\n  for (i = words.length - 1; i > 0; i -= 1) {\n    j = Random.range(0, i + 1);\n\n    temp = words[i];\n    words[i] = words[j];\n    words[j] = temp;\n  }\n}\n","import { generateIndexes } from './lib/generate-indexes';\nimport { shuffleWords } from './lib/shuffle-words';\n\nlet words: string[] = [];\n\nexport interface GenerateOptions {\n  /**\n   * A length or range of lengths that a word must match for it to have a\n   *  chance of being randomly chosen\n   * @example 5\n   * @example \"3-10\"\n   */\n  length?: string | number;\n  /**\n   * Regex words must match to have a chance of being randomly chosen\n   * @example \"word\"\n   * @example /ing$/\n   */\n  contains?: RegExp | string;\n  /**\n   * Sets the capitalization of the randomly chosen words\n   */\n  capitalize?: 'none' | 'first' | 'all';\n}\n\nexport class rword {\n  static globalPool: string[] = [];\n\n  static get words(): string[] {\n    return words;\n  }\n\n  /**\n   * Randomly generates words from the words array\n   */\n  static generate(count?: 1, opt?: GenerateOptions): string;\n  static generate(count: number, opt?: GenerateOptions): string[];\n  static generate(count: number = 1, opt?: GenerateOptions): string | string[] {\n    opt = Object.assign(\n      {\n        contains: /.*/,\n        length: '3-10',\n        capitalize: 'none',\n      },\n      opt\n    );\n\n    let length: { exactly?: number; start?: number; end?: number } = {};\n    const contains =\n      typeof opt.contains == 'string'\n        ? new RegExp(opt.contains)\n        : (opt.contains as RegExp);\n\n    // Convert opt.length to an object\n    // From string\n    if (typeof opt.length == 'string') {\n      if (opt.length.indexOf('-') > -1) {\n        const [start, end] = opt.length.split('-').map(Number);\n        length = { start, end };\n      } else {\n        opt.length = +opt.length;\n      }\n    }\n    // From number\n    if (typeof opt.length == 'number') {\n      length = { exactly: opt.length };\n    }\n\n    let pool: string[] = [];\n\n    // Skip filtering if possible\n    if (\n      contains.toString() == '/.*/' &&\n      length.start == 3 &&\n      length.end == 10\n    ) {\n      pool = words;\n    }\n    // Filter out unwanted words\n    else {\n      pool = words.filter((word) => {\n        // Filter out words that don't match length\n        if (length.exactly) {\n          if (word.length != length.exactly) return false;\n        } else {\n          if (\n            word.length < (length.start as number) ||\n            word.length > (length.end as number)\n          )\n            return false;\n        }\n\n        // Filter out words that don't contain regex\n        if (contains) return contains.test(word);\n        else return true;\n      });\n    }\n\n    // No matches\n    if (!pool.length) return count == 1 ? '' : [];\n\n    // Generate indexes for words to return\n    const indexes = generateIndexes(pool.length, count);\n    const temp: string[] = [];\n\n    // Select words by index\n    indexes.forEach((index) => temp.push(pool[index]));\n    pool = temp;\n\n    // Capitalize words\n    switch (opt.capitalize) {\n      case 'all':\n        pool = pool.map((w) => w.toUpperCase());\n        break;\n      case 'first':\n        pool = pool.map((w) => w[0].toUpperCase() + w.slice(1));\n        break;\n    }\n\n    // Returns string or array of strings\n    return count == 1 ? pool[0] : pool;\n  }\n\n  /**\n   * A simple generator that pulls words from a prefilled global pool. Should\n   *  be preferred over `rword.generate()` if custom filters are not needed as\n   *  this method can in certain instances be many times faster.\n   * @param count - Words to return. Throws error if greater than `10`\n   */\n  static generateFromPool(count: number = 1): string | string[] {\n    if (count > 10) throw 'Too many words requested. Use rword.generate().';\n\n    // Fill globalPool\n    if (count > rword.globalPool.length)\n      rword.globalPool = rword.generate(500) as string[];\n\n    const pool = rword.globalPool.splice(0, count);\n\n    return count == 1 ? pool[0] : pool;\n  }\n\n  /**\n   * Shuffles words and globalPool arrays\n   */\n  static shuffle(): void {\n    shuffleWords(words);\n    shuffleWords(rword.globalPool);\n  }\n\n  /**\n   * Load and shuffle word list\n   */\n  static load(list: 'big' | 'small') {\n    if (list === 'small') {\n      words = require('../words/small.json');\n    } else {\n      words = require('../words/big.json');\n    }\n    rword.shuffle();\n  }\n}\n\nrword.load('small');\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst secure_rng_1 = require(\"./lib/secure-rng\");\r\nexports.default = secure_rng_1.SecureRNG;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CharacterSetLengthCanNotBeBelowOneError = void 0;\r\nconst ts_error_1 = require(\"ts-error\");\r\nclass CharacterSetLengthCanNotBeBelowOneError extends ts_error_1.ExtendableError {\r\n    constructor() {\r\n        super();\r\n        this.message = 'Character set length can not be below one.';\r\n    }\r\n}\r\nexports.CharacterSetLengthCanNotBeBelowOneError = CharacterSetLengthCanNotBeBelowOneError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DecimalPlacesCanNotBeBelowOneError = void 0;\r\nconst ts_error_1 = require(\"ts-error\");\r\nclass DecimalPlacesCanNotBeBelowOneError extends ts_error_1.ExtendableError {\r\n    constructor() {\r\n        super();\r\n        this.message = 'Decimal places can not be below one.';\r\n    }\r\n}\r\nexports.DecimalPlacesCanNotBeBelowOneError = DecimalPlacesCanNotBeBelowOneError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LengthParameterCanNotBeBelowOneError = void 0;\r\nconst ts_error_1 = require(\"ts-error\");\r\nclass LengthParameterCanNotBeBelowOneError extends ts_error_1.ExtendableError {\r\n    constructor() {\r\n        super();\r\n        this.message = 'Length parameter can not be below one.';\r\n    }\r\n}\r\nexports.LengthParameterCanNotBeBelowOneError = LengthParameterCanNotBeBelowOneError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SecureRNG = void 0;\r\nconst tslib_1 = require(\"tslib\");\r\nconst bignumber_js_1 = tslib_1.__importDefault(require(\"bignumber.js\"));\r\nconst character_set_length_can_not_be_below_one_error_1 = require(\"./errors/character-set-length-can-not-be-below-one-error\");\r\nconst length_parameter_can_not_be_below_one_error_1 = require(\"./errors/length-parameter-can-not-be-below-one-error\");\r\nconst decimal_places_can_not_be_below_one_error_1 = require(\"./errors/decimal-places-can-not-be-below-one-error\");\r\nclass SecureRNGClass {\r\n    constructor() {\r\n        if (typeof global !== 'undefined' && typeof global.crypto === 'undefined') {\r\n            global.crypto = require('crypto');\r\n        }\r\n        bignumber_js_1.default.config({\r\n            CRYPTO: true\r\n        });\r\n    }\r\n    GenerateInteger(min, max) {\r\n        const minMax = SecureRNGClass.GetMinMax(0, 100, min, max);\r\n        if (minMax.min === minMax.max) {\r\n            return minMax.min;\r\n        }\r\n        return bignumber_js_1.default.random(20).times(minMax.max - minMax.min + 1).plus(minMax.min).integerValue(bignumber_js_1.default.ROUND_FLOOR).toNumber();\r\n    }\r\n    GenerateString(length = 10, chars = SecureRNGClass.DEFAULT_CHARACTERS) {\r\n        if (length <= 0) {\r\n            throw new length_parameter_can_not_be_below_one_error_1.LengthParameterCanNotBeBelowOneError();\r\n        }\r\n        if (typeof chars !== 'undefined' && chars.length === 0) {\r\n            throw new character_set_length_can_not_be_below_one_error_1.CharacterSetLengthCanNotBeBelowOneError();\r\n        }\r\n        let CharSet;\r\n        let GeneratedString = '';\r\n        if (typeof chars === 'undefined') {\r\n            CharSet = SecureRNGClass.DEFAULT_CHARACTERS;\r\n        }\r\n        else {\r\n            CharSet = chars;\r\n        }\r\n        for (let x = 0; x < length; x++) {\r\n            const SelectedChar = this.GenerateInteger(CharSet.length - 1);\r\n            GeneratedString += CharSet.charAt(SelectedChar);\r\n        }\r\n        return GeneratedString;\r\n    }\r\n    GenerateDecimal(decimalPlaces = 10, min, max) {\r\n        if (decimalPlaces < 1) {\r\n            throw new decimal_places_can_not_be_below_one_error_1.DecimalPlacesCanNotBeBelowOneError();\r\n        }\r\n        const minMax = SecureRNGClass.GetMinMax(0, 1, min, max);\r\n        if (minMax.min === minMax.max) {\r\n            return String(minMax.min);\r\n        }\r\n        return bignumber_js_1.default.random(decimalPlaces + 1).times(minMax.max - minMax.min).plus(minMax.min).toFixed(decimalPlaces, bignumber_js_1.default.ROUND_HALF_CEIL);\r\n    }\r\n    static GetMinMax(defaultMinValue = 0, defaultMaxValue = 1, min, max) {\r\n        let TempLow = defaultMinValue;\r\n        let TempHigh = defaultMaxValue;\r\n        if (typeof min !== 'undefined') {\r\n            if (typeof max !== 'undefined') {\r\n                TempLow = min;\r\n                TempHigh = max;\r\n            }\r\n            else {\r\n                TempLow = 0;\r\n                TempHigh = min;\r\n            }\r\n        }\r\n        const Low = Math.min(TempLow, TempHigh);\r\n        const High = Math.max(TempLow, TempHigh);\r\n        return {\r\n            min: Low,\r\n            max: High\r\n        };\r\n    }\r\n}\r\nSecureRNGClass.DEFAULT_CHARACTERS = '0123456789qwertyuopasdfghjklizxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM';\r\nexports.SecureRNG = new SecureRNGClass();\r\n","\"use strict\";\nexports.__esModule = undefined;\nexports.__esModule = true;\n\nvar helpers = require(\"./helpers\");\nvar setPrototypeOf = helpers.setPrototypeOf;\nvar getPrototypeOf = helpers.getPrototypeOf;\nvar defineProperty = helpers.defineProperty;\nvar objectCreate = helpers.objectCreate;\n\n// Small test for IE6-8, which checks if the environment prints errors \"nicely\"\n// If not, a toString() method to be added to the error objects with formatting\n// like in more modern browsers\nvar uglyErrorPrinting = new Error().toString() === \"[object Error]\";\n\n// For compatibility\nvar extendableErrorName = \"\";\n\nfunction ExtendableError(message) {\n  // Get the constructor\n  var originalConstructor = this.constructor;\n  // Get the constructor name from the non-standard name property. If undefined\n  // (on old IEs), it uses the string representation of the function to extract\n  // the name. This should work in all cases, except for directly instantiated\n  // ExtendableError objects, for which the name of the ExtendableError class /\n  // function is used\n  var constructorName =\n    originalConstructor.name ||\n    (function () {\n      var constructorNameMatch = originalConstructor\n        .toString()\n        .match(/^function\\s*([^\\s(]+)/);\n      return constructorNameMatch === null\n        ? extendableErrorName\n          ? extendableErrorName\n          : \"Error\"\n        : constructorNameMatch[1];\n    })();\n  // If the constructor name is \"Error\", ...\n  var constructorNameIsError = constructorName === \"Error\";\n  // change it to the name of the ExtendableError class / function\n  var name = constructorNameIsError ? extendableErrorName : constructorName;\n\n  // Obtain a new Error instance. This also sets the message property already.\n  var instance = Error.apply(this, arguments);\n\n  // Set the prototype of this to the prototype of instance\n  setPrototypeOf(instance, getPrototypeOf(this));\n\n  // On old IEs, the instance will not extend our subclasses this way. The fix is to use this from the function call instead.\n  if (\n    !(instance instanceof originalConstructor) ||\n    !(instance instanceof ExtendableError)\n  ) {\n    var instance = this;\n    Error.apply(this, arguments);\n    defineProperty(instance, \"message\", {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true,\n    });\n  }\n\n  // define the name property\n  defineProperty(instance, \"name\", {\n    configurable: true,\n    enumerable: false,\n    value: name,\n    writable: true,\n  });\n\n  // Use Error.captureStackTrace on V8 to capture the proper stack trace excluding any of our error classes\n  if (Error.captureStackTrace) {\n    // prettier-ignore\n    Error.captureStackTrace(\n      instance,\n      constructorNameIsError ? ExtendableError : originalConstructor\n    );\n  }\n  // instance.stack can still be undefined, in which case the best solution is to create a new Error object and get it from there\n  if (instance.stack === undefined) {\n    var err = new Error(message);\n    err.name = instance.name;\n    instance.stack = err.stack;\n  }\n\n  // If the environment does not have a proper string representation (IE), provide an alternative toString()\n  if (uglyErrorPrinting) {\n    defineProperty(instance, \"toString\", {\n      configurable: true,\n      enumerable: false,\n      value: function toString() {\n        return (\n          (this.name || \"Error\") +\n          (typeof this.message === \"undefined\" ? \"\" : \": \" + this.message)\n        );\n      },\n      writable: true,\n    });\n  }\n\n  // We're done!\n  return instance;\n}\n\n// Get the name of the ExtendableError function or use the string literal\nextendableErrorName = ExtendableError.name || \"ExtendableError\";\n\n// Set the prototype of ExtendableError to an Error object\nExtendableError.prototype = objectCreate(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\n\n// Export\nexports.ExtendableError = ExtendableError;\nexports[\"default\"] = exports.ExtendableError;\n","\"use strict\";\nexports.__esModule = undefined;\nexports.__esModule = true;\n\n// Misc helpers\n\nvar objectSetPrototypeOfIsDefined = typeof Object.setPrototypeOf === \"function\";\nvar objectGetPrototypeOfIsDefined = typeof Object.getPrototypeOf === \"function\";\nvar objectDefinePropertyIsDefined = typeof Object.defineProperty === \"function\";\nvar objectCreateIsDefined = typeof Object.create === \"function\";\nvar objectHasOwnPropertyIsDefined =\n  typeof Object.prototype.hasOwnProperty === \"function\";\n\nvar setPrototypeOf = function setPrototypeOf(target, prototype) {\n  if (objectSetPrototypeOfIsDefined) {\n    Object.setPrototypeOf(target, prototype);\n  } else {\n    target.__proto__ = prototype;\n  }\n};\nexports.setPrototypeOf = setPrototypeOf;\n\nvar getPrototypeOf = function getPrototypeOf(target) {\n  if (objectGetPrototypeOfIsDefined) {\n    return Object.getPrototypeOf(target);\n  } else {\n    return target.__proto__ || target.prototype;\n  }\n};\nexports.getPrototypeOf = getPrototypeOf;\n\n// Object.defineProperty exists in IE8, but the implementation is buggy, so we\n// need to test if the call fails, and, if so, set a flag to use the shim, as if\n// the function were not defined. When this error is caught the first time, the\n// function is called again recursively, after the flag is set, so the desired\n// effect is achieved anyway.\nvar ie8ObjectDefinePropertyBug = false;\nvar defineProperty = function defineProperty(target, name, propertyDescriptor) {\n  if (objectDefinePropertyIsDefined && !ie8ObjectDefinePropertyBug) {\n    try {\n      Object.defineProperty(target, name, propertyDescriptor);\n    } catch (e) {\n      ie8ObjectDefinePropertyBug = true;\n      defineProperty(target, name, propertyDescriptor);\n    }\n  } else {\n    target[name] = propertyDescriptor.value;\n  }\n};\nexports.defineProperty = defineProperty;\n\nvar hasOwnProperty = function hasOwnProperty(target, name) {\n  if (objectHasOwnPropertyIsDefined) {\n    return target.hasOwnProperty(target, name);\n  } else {\n    return target[name] === undefined;\n  }\n};\nexports.hasOwnProperty = hasOwnProperty;\n\nvar objectCreate = function objectCreate(prototype, propertyDescriptors) {\n  if (objectCreateIsDefined) {\n    return Object.create(prototype, propertyDescriptors);\n  } else {\n    var F = function F() {};\n    F.prototype = prototype;\n    var result = new F();\n    if (typeof propertyDescriptors === \"undefined\") {\n      return result;\n    }\n    if (typeof propertyDescriptors === \"null\") {\n      throw new Error(\"PropertyDescriptors must not be null.\");\n    }\n    if (typeof propertyDescriptors === \"object\") {\n      for (var key in propertyDescriptors) {\n        if (hasOwnProperty(propertyDescriptors, key)) {\n          result[key] = propertyDescriptors[key].value;\n        }\n      }\n    }\n\n    return result;\n  }\n};\nexports.objectCreate = objectCreate;\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n"],"names":["globalObject","BigNumber","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","i","coeffToString","a","s","z","j","length","r","charCodeAt","slice","compare","x","y","b","xc","c","yc","k","e","l","intCheck","min","max","name","Error","String","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","clone","configObject","div","convertBase","parseNumeric","P","prototype","constructor","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","caseChanged","isNum","this","_isBigNumber","test","indexOf","replace","search","substring","round","DEBUG","toUpperCase","toLowerCase","push","format","rm","id","c0","ne","maxOrMin","args","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","call","maximum","arguments","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","copy","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","concat","multiply","base","m","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","gt","isGreaterThanOrEqualTo","gte","isLessThan","lt","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","define","random_1","require","exports","count","indexes","index","Random","range","value","intToFloat","parseInt","integer","words","generate_indexes_1","shuffle_words_1","rword","generate","undefined","opt","Object","assign","contains","capitalize","start","end","map","Number","exactly","pool","filter","word","generateIndexes","forEach","w","generateFromPool","globalPool","shuffle","shuffleWords","load","list","secure_rng_1","SecureRNG","defineProperty","CharacterSetLengthCanNotBeBelowOneError","ts_error_1","ExtendableError","super","message","DecimalPlacesCanNotBeBelowOneError","LengthParameterCanNotBeBelowOneError","bignumber_js_1","__importDefault","character_set_length_can_not_be_below_one_error_1","length_parameter_can_not_be_below_one_error_1","decimal_places_can_not_be_below_one_error_1","SecureRNGClass","global","default","GenerateInteger","minMax","GetMinMax","GenerateString","CharSet","chars","DEFAULT_CHARACTERS","GeneratedString","SelectedChar","GenerateDecimal","TempLow","TempHigh","__esModule","helpers","setPrototypeOf","getPrototypeOf","objectCreate","uglyErrorPrinting","extendableErrorName","originalConstructor","constructorName","constructorNameMatch","match","constructorNameIsError","instance","apply","configurable","enumerable","writable","captureStackTrace","stack","err","objectSetPrototypeOfIsDefined","objectGetPrototypeOfIsDefined","objectDefinePropertyIsDefined","objectCreateIsDefined","create","objectHasOwnPropertyIsDefined","target","__proto__","ie8ObjectDefinePropertyBug","propertyDescriptor","propertyDescriptors","F","result","key","toPropertyKey","module","_typeof","Symbol","toPrimitive","TypeError","o","iterator","extendStatics","Array","__extends","__","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","_","kind","descriptor","done","context","access","addInitializer","get","init","unshift","__runInitializers","thisArg","useValue","__propKey","__setFunctionName","description","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","__generator","body","g","label","sent","trys","ops","verb","op","__createBinding","k2","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","jl","__spreadArray","to","from","pack","__await","__asyncGenerator","asyncIterator","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","__classPrivateFieldGet","receiver","state","has","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","dispose","inner","asyncDispose","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","rec"],"sourceRoot":""}